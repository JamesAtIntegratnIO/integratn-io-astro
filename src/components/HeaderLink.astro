---
import type { HTMLAttributes } from "astro/types";

type Props = HTMLAttributes<"a">;

const { href, class: className, ...props } = Astro.props;

const { pathname } = Astro.url;
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === "/" + subpath?.[0];
---

<a href={href} class:list={[className, { active: isActive }]} {...props}>
	<slot />
</a>
<style>
	a {
		padding: 0.5em 0.1em;
		color: var(--accent);
		border-bottom: 4px solid transparent;
		text-decoration: none;
	}
	a.active {
		text-decoration: none;
		border-bottom-color: var(--accent-dark);
	}
	@media (max-width: 1200px) {
		a {
			font-size: 1em; /* smaller font size for viewport widths up to 1200px */
		}
	}
	@media (max-width: 900px) {
		a {
			font-size: 0.72em; /* even smaller font size for viewport widths up to 800px */
			
		}
	}
</style>
