---
import { getCollection } from "astro:content";
import FormattedDate from "./FormattedDate.astro";

// Sort posts by date and select the latest one
const postsData = await getCollection("posts");
const posts = Array.isArray(postsData) ? postsData : [];
const latestPost: any = posts.sort((a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime())[0];

---
  <main>
    <section>
      <article>
        <a href={`/posts/${latestPost.slug}/`}>
          <div class="post" style={{ position: "relative" }}>
            <img
              class="post-image"
              width={720}
              height={360}
              src={latestPost.data.heroImage}
              alt=""
            />
            <div class="post-description">{latestPost.data.description}</div>
          </div>
          <h4 class="title">{latestPost.data.title}</h4>
          <FormattedDate date={latestPost.data.pubDate} />
        </a>
      </article>
    </section>
  </main>
<style>
  main {
    width: 960px;
  }
  ul {
    display: flex;
    flex-wrap: wrap;
    gap: 2rem;
    list-style-type: none;
    margin: 0;
    padding: 0;
  }
  ul li {
    width: calc(50% - 1rem);
  }
  ul li * {
    text-decoration: none;
    transition: 0.2s ease;
  }
  ul li:first-child {
    width: 100%;
    margin-bottom: 1rem;
    text-align: center;
  }
  ul li:first-child img {
    width: 100%;
  }
  ul li:first-child .title {
    font-size: 2.369rem;
  }
  ul li img {
    margin-bottom: 0.5rem;
    border-radius: 12px;
  }
  ul li a {
    display: block;
  }
  .title {
    margin: 0;
    color: rgb(var(--black));
    line-height: 1;
  }
  .date {
    margin: 0;
    color: rgb(var(--gray));
  }
  ul li a:hover h4,
  ul li a:hover .date {
    color: rgb(var(--accent));
  }
  ul a:hover img {
    box-shadow: var(--box-shadow);
  }
  @media (max-width: 720px) {
    ul {
      gap: 0.5em;
    }
    ul li {
      width: 100%;
      text-align: center;
    }
    ul li:first-child {
      margin-bottom: 0;
    }
    ul li:first-child .title {
      font-size: 1.563em;
    }
  }
  .container {
    display: flex;
    flex-wrap: wrap;
    gap: 5px;
  }
  .series {
    margin: 0.05em;
    color: var(--black);
    /* border: 1px var(--gray-dark) solid; */
    box-shadow: var(--box-shadow); /* Added box-shadow */
    border-radius: 8px; /* Rounded the corners */
    padding: 0.1em 0.25em; /* Adjusted padding */
    font-size: 1em; /* Adjusted font size */
    background-color: var(--rosewater);
  }
  .tag {
    margin: 0.05em;
    color: var(--black);
    /* border: 1px var(--gray-dark) solid; */
    box-shadow: var(--box-shadow); /* Added box-shadow */
    border-radius: 8px; /* Rounded the corners */
    padding: 0.1em 0.25em; /* Adjusted padding */
    font-size: 1em; /* Adjusted font size */
    background-color: var(--accent);
  }
  .category {
    margin: 0.05em;
    color: var(--black);
    /* border: 1px var(--gray-dark) solid; */
    box-shadow: var(--box-shadow); /* Added box-shadow */
    border-radius: 8px; /* Rounded the corners */
    padding: 0.1em 0.25em; /* Adjusted padding */
    font-size: 1em; /* Adjusted font size */
    background-color: var(--red);
  }
  .post {
    position: relative;
    display: inline-block;
  }

  .post-image {
    display: block;
    width: 100%;
    height: auto;
    transition: filter 0.3s ease;
  }

  .post:hover .post-image {
    filter: blur(2px);
  }

  .post-description {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    opacity: 0;
    transition: opacity 0.3s ease;
    background: rgba(0, 0, 0, 0.5);
    color: white;
    padding: 20px;
    box-sizing: border-box;
  }

  .post:hover .post-description {
    opacity: 1;
  }
</style>
