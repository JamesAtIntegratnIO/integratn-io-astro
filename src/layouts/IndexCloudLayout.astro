---
import BaseLayout from "./BaseLayout.astro";

import {
  PINK,
  MAUVE,
  RED,
  MAROON,
  PEACH,
  YELLOW,
  GREEN,
  TEAL,
  SKY,
  SAPPHIRE,
  BLUE,
  LAVENDER,
} from "../consts.ts";
import { countPostElement } from "../scripts/processElements";
const { title, property } = Astro.props;
const names = await countPostElement(property)

// Randomize the order of names
names.sort(() => Math.random() - 0.5);

let chunks = [];

// First row
chunks.push(names.slice(0, 3));

// Middle rows
let middleTags = names.slice(3, names.length - 3);
let chunkSize = Math.ceil(middleTags.length / Math.ceil(middleTags.length / 5));
for (let i = 0; i < middleTags.length; i += chunkSize) {
  chunks.push(middleTags.slice(i, i + chunkSize));
}

// Last row
chunks.push(names.slice(names.length - 3, names.length));
---

<BaseLayout title={title} description="List of all my Tags">
  <div class="names">
    {
      chunks.map((chunk) => (
        <div class="name-chunk">
          {chunk.map((name: { name: string; count: number }) => (
            <a href={`/names/${name.name}`}>
              <span
                class="name"
                style={{
                  fontSize: `${Math.min(name.count > 1 ? name.count * 1.5 + 16 : 16, 28)}px`,
                  backgroundColor: [
                    PINK,
                    MAUVE,
                    RED,
                    MAROON,
                    PEACH,
                    YELLOW,
                    GREEN,
                    TEAL,
                    SKY,
                    SAPPHIRE,
                    BLUE,
                    LAVENDER,
                  ][Math.floor(Math.random() * 12)],
                }}
              >
                {name.name
                  .split(/[-_]/)
                  .map(
                    (word: string) =>
                      word.charAt(0).toUpperCase() + word.slice(1),
                  )
                  .join(" ")}
              </span>
            </a>
          ))}
        </div>
      ))
    }
  </div>
</BaseLayout>

<style>
  a {
    color: var(--gray);
  }

  .names {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    padding: 1em;
    max-width: 600px;
    margin: auto;
  }

  .name {
    margin: 0.15em;
    /* border: 1px var(--gray-dark) solid; */
    box-shadow: var(--box-shadow); /* Added box-shadow */
    border-radius: 8px; /* Rounded the corners */
    padding: 0.1em 0.5em; /* Adjusted padding */
    font-size: 1em; /* Adjusted font size */
    transition: all 0.5s; /* Added transition */
  }
</style>
